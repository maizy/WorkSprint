#! /bin/sh
### BEGIN INIT INFO
# Provides:          Worksprint FastCGI server (Django based)
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: Start FastCGI servers with Django
### END INIT INFO
#
# Author:  Guillermo Fernandez Castellanos
#          <guillermo.fernandez.castellanos AT gmail.com>.
#
# Changed: Jannis Leidel
#          <jannis AT leidel.info>
#          Joost Cassee
#          <joost@cassee.net>
#          Sebastian Rahlf
#          <basti AT redtoad.de>
#          Nikita Kovaliov
#          <nikita AT maizy.ru>
#
#

set -e

#### CONFIGURATION (override in /etc/default/worksprint)

# project directories
WORKSPRINT_ROOT=""

# please make sure this is NOT root
# local user prefered, www-data accepted
RUN_AS='www-data'

# maximum requests before fast-cgi process respawns
# (a.k.a. get killed and let live)
MAXREQUESTS=1000

# default locale (note that some of python 
# os.path functions depends on this)
SYSLANG='en_US.UTF-8'

#### END CONFIGURATION

# Include defaults if available
if [ -f /etc/default/worksprint ] ; then
    . /etc/default/worksprint
fi

if [ -z "${WORKSPRINT_WEBROOT}" ]; then
    WORKSPRINT_WEBROOT="${WORKSPRINT_ROOT}/src/work"
fi

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="Worksprint"
NAME=$0
SCRIPTNAME=/etc/init.d/$NAME

chown $RUN_AS:$RUN_AS "${WORKSPRINT_ROOT}/var/run/"

PID_PATH="${WORKSPRINT_ROOT}/var/run/service.pid"
SOCKET_PATH="${WORKSPRINT_ROOT}/var/run/service.socket"

#
#       Function that starts the daemon/service.
#
d_start()
{
    export "LANG=${SYSLANG}"

    if [ ! -f "${WORKSPRINT_ROOT}/bin/activate" ]; then
        echo "Error: Virtualenv activate script not found at ${WORKSPRINT_ROOT}/bin/activate"
        exit 1
    fi

    #activate virtualenv
    . "${WORKSPRINT_ROOT}/bin/activate"

    # find python binary to use
    PYTHON=`which python`

    if [ -f "${PID_PATH}" ]; then
        echo "Already running."
    else
        $WORKSPRINT_WEBROOT/manage.py collectstatic --noinput
        start-stop-daemon --start --quiet \
            --pidfile "${PID_PATH}" \
            --chuid $RUN_AS \
            --exec /usr/bin/env \
            -- $PYTHON "${WORKSPRINT_WEBROOT}/manage.py" runfcgi \
                       method=thread \
                       maxrequests=$MAXREQUESTS \
                       "socket=${SOCKET_PATH}" \
                       "pidfile=${PID_PATH}"

        chmod 400 "${PID_PATH}"
        echo "Started with pid `cat ${PID_PATH}`"
    fi
    sleep 1
}

#
#       Function that stops the daemon/service.
#
d_stop() {
        # Killing all Django FastCGI processes running
        start-stop-daemon --stop --quiet --pidfile "${PID_PATH}" || echo "Not running"

        if [ -f "${PID_PATH}" ]; then
           rm -f "${PID_PATH}"
        fi

        echo "OK"

        sleep 1
}

ACTION="$1"
case "$ACTION" in
    start)
        echo -n "Starting $DESC: "
        d_start
        ;;

    stop)
        echo -n "Stopping $DESC: "
        d_stop
        ;;

    status)
        echo -n "Status of $DESC"
        if [ -f "${PID_FILE}" ]; then
                echo " running ($(cat $PID_PATH))"
            else
                echo " not running"
            fi
        ;;

    restart|force-reload)
        echo "Restarting $DESC "
        d_stop
        sleep 2
        d_start
        ;;

    *)
        echo "Usage: $NAME {start|stop|restart|force-reload|status}" >&2
        exit 3
        ;;
esac

exit 0
